extends base

block content
    main
        .transaction__wrapper
            .transaction
                h2.heading-secondary.ma-bt-lg Thông tin giao dịch
                .input-group.mb-3
                    span#inputGroup-sizing-default.input-group-text Người gửi
                    input.form-control(type='text', id="from-address", aria-label='Sizing example input', aria-describedby='inputGroup-sizing-default', readonly, value=`${fromAddress}`)
                .input-group.mb-3
                    span#inputGroup-sizing-default.input-group-text Người nhận
                    input.form-control(type='text', id="to-address", aria-label='Sizing example input', aria-describedby='inputGroup-sizing-default', readonly, value=`${toAddress}`)
                .input-group.mb-3
                    span#inputGroup-sizing-default.input-group-text Số ETH
                    input.form-control(type='text', id="total-eth", aria-label='Sizing example input', aria-describedby='inputGroup-sizing-default', readonly, value=`${totalETH}`)
                input(type="hidden", id="abi", value=`${abi}`)
                input(type="hidden", id="address", value=`${address}`)
                input(type="hidden", id="user-id", value=`${userId}`)
                input(type="hidden", id="merchaindise-id", value=`${merchaindiseId}`)
                .transaction__button
                    button.btn.btn-primary.btn-lg(type='button', onclick="show()") Giao dịch
                    button.btn.btn-primary.btn-lg(type='button', onclick="cancel()") Hủy giao dịch
            
    script.
        async function show(){
            if(window.ethereum !== "undefined") {
                const accounts = await ethereum.request({method: "eth_requestAccounts"});
                account = document.getElementById("from-address").value;
            }
            let userId = document.getElementById("user-id").value;
            let Address = document.getElementById("address").value;
            let ABI = (await (await fetch(`http://localhost:4000/user-contract/${Address}`, {method: "GET"})).json()).abi;
            window.web3 = await new Web3(window.ethereum);
            window.contract = await new window.web3.eth.Contract(ABI, Address);
            let orderInfo = await window.contract.methods.getOrder().call();
            let totalETH = window.web3.utils.toWei(orderInfo['totalInvoice'], 'ether');
            //- await window.contract.methods.deposit().send({from: account, value: totalETH});
            window.contract.methods.deposit().send({from: account, value: totalETH})
                .then(tx => {
                    window.alert('Giao dịch thành công, hãy xác nhận khi nhận được hàng');
                    window.location.href=`http://localhost:4000/user/${userId}/`;
                })
                .catch(async e => {
                    if (e.code === 4001){
                        await fetch(`http://localhost:4000/user-contract/${Address}`, {method: "DELETE"});
                        window.alert('Hủy giao dịch thành công!');
                        window.location.href='http://localhost:4000/hang-hoa/tat-ca-mat-hang';
                    } 
                });
            
            //- let toAddress = document.getElementById("to-address").value;
            //- await window.contract.methods.withdraw(toAddress, totalETH).send({from: account});
        }

        async function cancel(){
            let Address = document.getElementById("address").value;
            let id = document.getElementById('merchaindise-id').value;
            let response = await fetch(`http://localhost:4000/user-contract/${Address}`, {method: "DELETE"});
            let response1 = await fetch(`http://localhost:4000/user-contract/huy-don-boi-nguoi-mua/${Address}/${id}`, {method: "POST"});
            if(response.status ==200 && response1.status ==200){
                window.alert('Hủy giao dịch thành công!');
                window.location.href='http://localhost:4000/hang-hoa/tat-ca-mat-hang';
            } else {
                window.alert('Đã xảy ra lỗi, vui lòng thử lại sau!');
            }
            
        }
                        