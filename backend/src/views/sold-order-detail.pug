extends base

block content
    main.main
            .login-form
                h2.heading-secondary.ma-bt-lg Chi tiết đơn hàng
                form( action=`http://localhost:4000/user-contract/xac-nhan/${address}` method="patch").form.form--login
                    .form__group
                        label.form__label(for='email') Tên sản phẩm
                        input.form__input(value=`${orderInfo.productName.charAt(0).toUpperCase() + orderInfo.productName.slice(1)}`,  required, name="name", readonly)
                    .form__group.ma-bt-md
                        label.form__label(for='password') Số lượng
                        input.form__input(value=`${orderInfo.quantity}`,  required, name="quantity", readonly)
                    .form__group.ma-bt-md
                        input.form__input(value=`${orderInfo.id}`,  type='hidden',required, name="id", readonly, id='id')
                    .form__group.ma-bt-md
                        label.form__label(for='password') Tổng số tiền
                        input.form__input( value=`${orderInfo.totalInvoice} ETH`, required, name="totalInvoice", readonly, id="totalInvoice")
                    .form__group.ma-bt-md
                        label.form__label(for='password') Thông tin người mua
                        input.form__input( value=`Email: ${buyer.email} / SĐT: ${buyer.phoneNumber} `, readonly)
                    .form__group.ma-bt-md
                        label.form__label(for='password') Ngày đặt mua
                        input.form__input( value=`${time}`, readonly)
                    .form__group.ma-bt-md
                        label.form__label(for='password') Trạng thái đơn hàng
                        if orderInfo.status == '0'
                            input.form__input( value='New', required, id="status", readonly)
                        else if orderInfo.status == '1'
                            input.form__input( value='Processing', required, id="status", readonly)
                        else if orderInfo.status == '2'
                            input.form__input( value='Deliveried', required, id="status", readonly)
                        else if orderInfo.status == '3'
                            input.form__input( value='Cancelled', required, id="status", readonly)
                        else
                            input.form__input( value='Completed', required, id="status", readonly)
                    
                    if orderInfo.status == '1'
                        .form__group
                            button(type='button', onclick='back()').btn.btn--green Quay lại
                    else if orderInfo.status == '0'
                        .form__group
                            button(type='button', onclick='orderCancel()').btn.btn--green Hủy đơn
                            button(type='button', onclick='confirm()').btn.btn--green Xác nhận
                            button(type='button', onclick='back()').btn.btn--green Quay lại
                    else if orderInfo.status == '2'
                        .form__group
                            button(type='button', onclick='withDraw()').btn.btn--green Rút tiền
                            button(type='button', onclick='back()').btn.btn--green Quay lại
                    else if orderInfo.status == '3' || orderInfo.status =='4'
                        button(type='button', onclick='back()').btn.btn--green Quay lại
                    input(type="hidden", id="address", value=`${address}`)
                    input(type="hidden", id="dueDate", value=`${orderInfo.dueDate}`)
                    input(type="hidden", id="seller-id", value=`${me.id}`)
                    input(type="hidden", id="seller-address", value=`${me.walletAddress}`)
                    input(type="hidden", id="buyer-address", value=`${orderInfo.buyer}`)

    script.
        async function orderCancel(){
            if(document.getElementById('status').value !== 'New'){
                window.alert('Trạng thái đơn hàng không được phép hủy!');
                return
            }
            let orderAddress = document.getElementById('address').value;
            let buyerAddress = document.getElementById('buyer-address').value;
            let sellerAddress = document.getElementById('seller-address').value;
            let userId = document.getElementById('seller-id').value;
            let id = document.getElementById('id').value;

            let ABI = (await (await fetch(`http://localhost:4000/user-contract/${orderAddress}`, {method: "GET"})).json()).abi;
            window.web3 = await new Web3(window.ethereum);
            window.contract = await new window.web3.eth.Contract(ABI, orderAddress);
            console.log(await window.contract.methods.getBalance().call())
            let orderInfo = await window.contract.methods.getOrder().call();
            let totalETH = window.web3.utils.toWei(orderInfo['totalInvoice'], 'ether');
            await fetch(`http://localhost:4000/user-contract/huy-don-boi-nguoi-ban/${orderAddress}/${id}`, {method: "POST"});
            //- await window.contract.methods.withdraw(buyerAddress, totalETH).send({from: sellerAddress, gas: 1500000});
            window.contract.methods.withdraw(buyerAddress, totalETH).send({from: sellerAddress, gas: 1500000})
                .then(async tx => {
                    await fetch(`http://localhost:4000/user-contract/${orderAddress}`, {method: "DELETE"});
                    window.alert('Bạn đã hủy đơn hàng thành công!');
                    window.location.href=`http://localhost:4000/user/${userId}`;
                })
                .catch(async e => {
                    if (e.code === 4001){
                        window.alert('Hủy đơn hàng chưa thành công!');
                        window.location.href=`http://localhost:4000/user/${userId}/`;
                    } 
                });

           
        }

        async function withDraw(){
            if(document.getElementById('status').value !== 'Deliveried'){
                let dueDate = document.getElementById('dueDate').value;
                dueDate = new Date(dueDate * 1000);
                if(!(document.getElementById('status').value == 'New' && dueDate < Date.now())){
                    window.alert('Trạng thái đơn hàng chưa được phép rút tiền!');
                    return
                }   
            }
            if(window.ethereum !== "undefined") {
                const accounts = await ethereum.request({method: "eth_requestAccounts"});
            }
            let userId = document.getElementById('seller-id').value;
            let orderAddress = document.getElementById('address').value;
            let sellerAddress = document.getElementById('seller-address').value;

            let ABI = (await (await fetch(`http://localhost:4000/user-contract/${orderAddress}`, {method: "GET"})).json()).abi;
            window.web3 = await new Web3(window.ethereum);
            window.contract = await new window.web3.eth.Contract(ABI, orderAddress);
            if(await window.contract.methods.getBalance().call() == 0){
                 window.alert('Tiền đã được rút, không thể thực hiện lại thao tác này!');
                 return
            }
            let orderInfo = await window.contract.methods.getOrder().call();
            let totalETH = window.web3.utils.toWei(orderInfo['totalInvoice'], 'ether');
            //- await window.contract.methods.withdraw(sellerAddress, totalETH).send({from: sellerAddress, gas: 1500000});

            window.contract.methods.withdraw(sellerAddress, totalETH).send({from: sellerAddress, gas: 1500000})
                .then(async tx => {
                    let response = await fetch(`http://localhost:4000/user-contract/complete/${orderAddress}`, {method: "POST"});
                    if(response.status == 200){
                        window.alert('Bạn đã rút tiền thành công!');
                        window.location.href=`http://localhost:4000/user/${userId}/`;
                    }
                    
                })
                .catch(async e => {
                    if (e.code === 4001){
                        window.alert('Bạn chưa rút tiền!');
                        window.location.href=`http://localhost:4000/user/${userId}/`;
                    } 
                });
        }

        async function confirm(){
            let userId = document.getElementById('seller-id').value;
            let orderAddress = document.getElementById('address').value;
            let response = await fetch(`http://localhost:4000/user-contract/xac-nhan-boi-nguoi-ban/${orderAddress}`, {method: "POST"});
            if(response.status == 200){
                window.alert('Bạn đã xác nhận đơn hàng!');
                window.location.href=`http://localhost:4000/user-contract/don-ban/${orderAddress}`;
            }
        }

        function back(){
            //- let userId = document.getElementById('seller-id').value;
            //-  window.location.href=`http://localhost:4000/user/${userId}/don-ban`;
            history.back()
        }
